struct compare{
        bool operator()(string n1, string n2){
            if(n1.length()!=n2.length()){
                return n1.length()>n2.length();
            }
            return n1>n2;
        }
    };
    string kthLargestNumber(vector<string>& nums, int k) {
        priority_queue<string, vector<string>, compare> pq;
        for(int i=0; i<k; i++){
            pq.push(nums[i]);
        }
        for(int i=k;i<nums.size(); i++){
            if(pq.top().length()!=nums[i].length()){
                if(pq.top().length()<nums[i].length()){
                    pq.pop();
                    pq.push(nums[i]);
                }
            }
            else if(pq.top()<nums[i]){
                    pq.pop();
                    pq.push(nums[i]);
                }
        }
        return pq.top();
    }
