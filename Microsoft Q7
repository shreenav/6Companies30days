int dfs(vector<vector<int>>& grid, int i , int j){
        if(i<0 or i>=grid.size() or j<0 or j>=grid[0].size())
        return 0;
        if(grid[i][j]==0)
        return 0;
        grid[i][j] = 0;
        return 1 + dfs(grid,i,j+1) + dfs(grid,i,j-1) + dfs(grid,i+1,j) + dfs(grid,i-1,j)
                 + dfs(grid,i-1,j-1)+ dfs(grid,i+1,j+1)+ dfs(grid,i+1,j-1)+ dfs(grid,i-1,j+1);
    }
    int findMaxArea(vector<vector<int>>& grid) {
        int ans = 0;
        int n = grid.size();
        int m = grid[0].size();
        for(int i=0;i<n; i++){
            for(int j = 0; j<m; j++){
                if(grid[i][j]){
                    ans = max(ans, dfs(grid, i, j));
                }
            }
        }
        return ans;
    }
