int maxPerformance(int n, vector<int>& speed, vector<int>& efficiency, int k) {
        vector<pair<int,int>>se(n);
        for(int i=0; i<n; i++){
            se[i] = {efficiency[i], speed[i]};
        }
        sort(rbegin(se), rend(se));
        priority_queue<int, vector<int>, greater<int>>pq;
        long sum = 0, res = 0;
        for(auto p:se){
            int s = p.second, e = p.first;
            sum+=s;
            pq.push(s);
            if(pq.size()>k){
                sum-=pq.top();
                pq.pop();
            }
            res = max(res, sum*e);
        }
        return res%1000000007;
    }
