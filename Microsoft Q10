int FindMaxSum(int arr[], int n)
    {
        if(n==1){
            return arr[0];
        }
        if(n==2){
            return max(arr[0], arr[1]);
        }
        int dp[n] = {0};
        dp[0] = arr[0];
        dp[1] = max(arr[0],arr[1]);
        for(int i=2;i<n;i++){
            int inc = arr[i] + dp[i-2];
            int exc = dp[i-1];
            dp[i] = max(inc, exc);
        }
        return dp[n-1];
    }

//without dp array, space optimised
int FindMaxSum(int arr[], int n)
    {
        if(n==1){
            return arr[0];
        }
        if(n==2){
            return max(arr[0], arr[1]);
        }
        int dp0, dp1, ans;
        dp0 = arr[0];
        dp1 = max(arr[0],arr[1]);
        for(int i=2;i<n;i++){
            int inc = arr[i] + dp0;
            int exc = dp1;
            ans = max(inc, exc);
            dp0 = dp1;
            dp1 = ans;
        }
        return ans;
    }
